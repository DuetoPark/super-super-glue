@use "../../styles/main.scss" as *;

@mixin matchColorAndStyle($color, $style) {
  @if ($color == "primary") {
    $bg-main: $green-light;
    $bg-hover: $green-dark;
    $text-main: $white;
    $text-hover: $white;

    @if ($style == "full") {
      @include fullStyle($bg-main, $bg-hover, $text-main);
    }

    @if ($style == "outlined") {
      @include outlinedStyle($bg-main, $bg-hover);
    }

    @if ($style == "ghost") {
      @include ghostStyle($bg-main, $bg-hover);
    }
  }

  @if ($color == "secondary") {
    $bg-main: $pink;
    $bg-hover: $pink-dark;
    $text-main: $green;
    $text-hover: $green-dark;

    @if ($style == "full") {
      @include fullStyle($bg-main, $bg-hover, $text-main);
    }

    @if ($style == "outlined") {
      @include outlinedStyle($bg-main, $bg-hover);
    }

    @if ($style == "ghost") {
      @include ghostStyle($bg-main, $bg-hover);
    }
  }

  @if ($color == "tertiary") {
    $bg-main: $gray;
    $bg-hover: $gray-dark;
    $text-main: $white;
    $text-hover: $white;

    @if ($style == "full") {
      @include fullStyle($bg-main, $bg-hover, $text-main);
    }

    @if ($style == "outlined") {
      @include outlinedStyle($bg-main, $bg-hover);
    }

    @if ($style == "ghost") {
      @include ghostStyle($bg-main, $bg-hover);
    }
  }
}

// NOTE: 버튼 스타일
@mixin fullStyle($bgMain, $bgHover, $textMain) {
  background-color: $bgMain;
  color: $textMain;

  &:hover {
    background-color: $bgHover;
  }
}

@mixin outlinedStyle($main, $hover) {
  background-color: $white;
  border: 1px solid $main;
  color: $main;

  &:hover {
    border-color: $hover;
    color: $hover;
  }
}

@mixin ghostStyle($main, $hover) {
  background-color: $white;
  color: $main;

  &:hover {
    color: $hover;
  }
}

.button {
  @include text-style(16);
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 48px;
  padding: 0 8px;
  border-radius: 8px;
  font-weight: 700;
  white-space: nowrap;
  transition: background-color 150ms ease-in-out, color 150ms ease-in-out,
    border-color 150ms ease-in-out;

  // NOTE: size
  &.tiny {
    @include text-style(12);
    height: 32px;
  }

  &.small {
    @include text-style(14);
    height: 40px;
  }

  &.medium {
    @include text-style(14);
    height: 44px;
  }

  // NOTE: style
  &.primary {
    &.full {
      @include matchColorAndStyle("primary", "full");
    }

    &.outlined {
      @include matchColorAndStyle("primary", "outlined");
    }

    &.ghost {
      @include matchColorAndStyle("primary", "ghost");
    }
  }

  &.secondary {
    &.full {
      @include matchColorAndStyle("secondary", "full");
    }

    &.outlined {
      @include matchColorAndStyle("secondary", "outlined");
    }

    &.ghost {
      @include matchColorAndStyle("secondary", "ghost");
    }
  }

  &.tertiary {
    &.full {
      @include matchColorAndStyle("tertiary", "full");
    }

    &.outlined {
      @include matchColorAndStyle("tertiary", "outlined");
    }

    &.ghost {
      @include matchColorAndStyle("tertiary", "ghost");
    }
  }

  // NOTE: rouned
  &.round {
    border-radius: 100px;
  }
}

.icon-button {
  --icon-size: 44px;
  @include text-style-24;

  flex-shrink: 0;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--icon-size);
  height: var(--icon-size);
  border-radius: 50%;
  transition: background-color 150ms ease-in-out, color 150ms ease-in-out;

  span {
    @include text-style-10;
    position: absolute;
    right: 2px;
    top: 4px;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 16px;
    height: 16px;
    border-radius: 100px;
    padding: 0 4px;
    font-weight: 700;
    background-color: $pink-dark;
    color: $white;
  }

  // NOTE: size
  &.medium {
    @include text-style-20;
    --icon-size: 40px;
    width: var(--icon-size);
    height: var(--icon-size);
  }

  &.small {
    @include text-style-16;
    --icon-size: 32px;
    width: var(--icon-size);
    height: var(--icon-size);
  }

  // NOTE: color
  &.black {
    color: $black;
  }

  &.dark {
    color: $dark;
  }

  &.primary {
    color: $primary;
  }

  &.secondary {
    color: $secondary;
  }

  &.tertiary {
    color: $tertiary;
  }

  &.orange {
    color: $orange;

    &:hover {
      color: $orange-dark;
    }
  }

  &.yellow {
    color: $yellow;

    &:hover {
      color: $yellow-dark;
    }
  }

  &.green {
    color: $green;

    &:hover {
      color: $green-dark;
    }
  }

  &.pink {
    color: $pink;

    &:hover {
      color: $pink-dark;
    }
  }

  &:hover {
    background-color: $gray-light;
  }
}
