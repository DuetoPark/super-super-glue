@use "../../constants/colors";
@use "../../mixins/text-style.scss" as text;
@use "../../mixins/scrollbar.scss" as scroll;

$color-pass: colors.$green-light;
$color-errer: colors.$pink-dark;
$color-border: colors.$gray-light;

%inputBase {
  @include text.text-style(16);
  display: block;
  width: 100%;
  min-width: 150px;
  height: 48px;
  padding: 0 12px;
  border: 1px solid $color-border;
  border-radius: 8px;
  font-weight: 500;
  color: colors.$primary;
  background-color: colors.$white;
  transition: border-color 150ms ease-in-out;

  &::placeholder {
    color: colors.$gray-dark;
  }

  &:active,
  &:focus {
    border-color: colors.$gray-dark;
  }

  &:disabled {
    background-color: colors.$gray-light;
    color: colors.$gray-dark;
  }
}

%boxBase {
  width: 100%;
  padding: 16px;
  border: 1px solid $color-border;
  border-radius: 16px;
  background-color: colors.$white;
}

.form,
.input-wrapper {
  width: 100%;
}

.input-text {
  @include text.text-style(14);
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  min-height: 28px;
  margin-bottom: 4px;
  font-weight: 600;
  color: colors.$dark;
}

.image-preview {
  @extend %boxBase;
  display: flex;
  flex-wrap: wrap;
  row-gap: 16px;
  column-gap: 8px;
  margin-top: 16px;
  animation: 300ms ease-in-out 0s fadeIn;

  .preview-card {
    position: relative;
    border: 1px solid $color-border;
    border-radius: 16px;
    animation: 300ms ease-in-out 0s fadeIn;
    overflow: hidden;
  }

  img {
    object-fit: cover;
    transition: filter 150ms ease-in-out;
  }

  .icon-button {
    position: absolute;
    z-index: 10;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }

  &:hover {
    img {
      filter: brightness(70%);
    }
  }
}

// NOTE: type
.text {
  .input {
    @extend %inputBase;
  }
}

.file {
  .input-label {
    @extend %boxBase;
    @include text.text-style(12);
    display: block;
    padding: 32px 16px;
    text-align: center;
    color: colors.$tertiary;
    word-break: keep-all;
    cursor: pointer;
    transition: color 150ms ease-in-out, border-color 150ms ease-in-out;

    &-icon {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      width: 48px;
      height: 48px;
      margin-bottom: 16px;
      border-radius: 50%;
      font-size: 24px;
      background-color: $color-border;
      color: colors.$white;
      transition: background-color 150ms ease-in-out;
    }

    p {
      margin-bottom: 4px;
      font-size: 16px;
      font-weight: 500;
    }

    &:hover {
      color: $color-pass;
      border-color: $color-pass;

      .input-label-icon {
        background-color: $color-pass;
      }
    }
  }
}

// NOTE: 유효성 검사 error
.error {
  &.text {
    .input {
      border-color: $color-errer;

      &:active,
      &:focus {
        border-color: $color-errer;
      }
    }
  }

  &.file {
    .input-label {
      border-color: $color-errer;
    }
  }
}

// NOTE: 반응형 (데스크탑)
@media screen and (min-width: 768px) {
  .image-preview {
    @include scroll.scrollbar("x", colors.$white);
    flex-wrap: nowrap;

    img {
      width: 220px;
      aspect-ratio: 1 / 1;
    }
  }
}

// NOTE: 애니메이션
@keyframes fadeIn {
  0% {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-12px);
  }

  100% {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }
}
